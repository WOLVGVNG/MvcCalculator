@model Calculation
@using System.Collections
@using X.PagedList
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Common
@{
    ViewData["Title"] = "Calculator";
}

@section Scripts
{
    <script>
        $(function() {
            clearAll();
            function updateCalculatorScreen() {
                console.log($('#Number1').val());
                // $('#Number1').val( parseFloat($('#Number1').val()) );
                // $('#Number2').val( parseFloat($('#Number2').val()) );
                $('#calculator-screen').val($('#Number1').val()+" "+$('#Operator').val()+" "+$('#Number2').val());
            }
            function clearAll() {
               $('#Number1').val('');
               $('#Number2').val('');
               $('#Operator').val('');
               $('#calculator-screen').val('');
            }
            var result = @ViewData["result"];
            if (result !== "null") {
                 $('#calculator-screen').val(result);
            }

            $('.number-btn').click(function() {
                if ($('#Operator').val() === '') {
                    $('#Number1').val($('#Number1').val()+$(this).val());
                } else {
                    $('#Number2').val($('#Number2').val()+$(this).val());
                }
                updateCalculatorScreen();
            });
            $('#dot-btn').click(function() {
                if ($('#Operator').val() === '') {
                    $('#Number1').val($('#Number1').val()+$(this).val());
                } else {
                    $('#Number2').val($('#Number2').val()+$(this).val());
                }
               updateCalculatorScreen();
            });
            $('.operator-btn').click(function() {
                $('#Operator').val($(this).val());
                updateCalculatorScreen();
            });
            
            $('#all-clear-btn').click(function() {
                clearAll();
            });
            $('#clear-btn').click(function() {
                if  ($('#Number2').val() !== '') {
                    $('#Number2').val($('#Number2').val().slice(0, -1));
                } else if ($('#Operator').val() !== '') {
                    $('#Operator').val('');
                } else if ($('#Number1').val() !== '') {
                   $('#Number1').val($('#Number1').val().slice(0, -1));
               }
                updateCalculatorScreen();
            });
        });
    </script>
}

<div class="container" id="calculator-index-wrapper">
    <div class="card mx-auto">
        <form asp-controller="Calculator" asp-action="Calculate" method="post">
            <input type="hidden" asp-for="Number1" />
            <span asp-validation-for="Number1" class="text-danger"></span>
            <input type="hidden" asp-for="Number2" />
            <span asp-validation-for="Number2" class="text-danger"></span>
            <input type="hidden" asp-for="Operator" />
            <input type="hidden" asp-for="UserId" value='@ViewData["userID"]' />
            <input type="text" id="calculator-screen" disabled/>
            <div class="card-body">
                <div class="row">
                    <div class="col-3"><button type="button" value="+" class="operator-btn d-block btn btn-primary">+</button></div>
                    <div class="col-3"><button type="button" value="-" class="operator-btn d-block btn btn-primary">-</button></div>
                    <div class="col-3"><button type="button" value="*" class="operator-btn d-block btn btn-primary">&times;</button> </div>
                    <div class="col-3"><button type="button" value="/" class="operator-btn d-block btn btn-primary">&divide;</button></div>
                </div>
                <div class="row mt-3">
                    <div class="col-9">
                        <div class="row">
                            <div class="col-4"><button type="button" value="7" class="number-btn d-block btn btn-light">7</button></div>
                            <div class="col-4"><button type="button" value="8" class="number-btn d-block btn btn-light">8</button></div>
                            <div class="col-4"><button type="button" value="9" class="number-btn d-block btn btn-light">9</button></div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-4"><button type="button" value="4" class="number-btn d-block btn btn-light">4</button></div>
                            <div class="col-4"><button type="button" value="5" class="number-btn d-block btn btn-light">5</button></div>
                            <div class="col-4"><button type="button" value="6" class="number-btn d-block btn btn-light">6</button></div>
                        </div>
                        <div class="row mt-3">
                            <div class="col-4"><button type="button" value="1" class="number-btn d-block btn btn-light">1</button></div>
                            <div class="col-4"><button type="button" value="2" class="number-btn d-block btn btn-light">2</button></div>
                            <div class="col-4"><button type="button" value="3" class="number-btn d-block btn btn-light">3</button></div>
                        </div>
                    </div>
                    <div class="col-3"><button type="submit" class="d-block btn btn-secondary h-100">=</button></div>
                </div>
                <div class="row mt-3">
                    <div class="col-3"><button type="button" value="0" class="number-btn d-block btn btn-light">0</button></div>
                    <div class="col-3"><button type="button" id="dot-btn" value="." class="d-block btn btn-secondary">.</button></div>
                    <div class="col-3"><button type="button" id="all-clear-btn" class="d-block btn btn-danger">AC</button></div>
                    <div class="col-3"><button type="button" id="clear-btn" class="d-block btn btn-danger">C</button></div>
                </div>
            </div>
        </form>
    </div>
</div>



<div class="container">
    <ul>
        @foreach (var calculation in (IPagedList<Calculation>) ViewData["Calculations"])
        {
            <li>
                @calculation.Number1
                @calculation.Operator
                @calculation.Number2
                =
                @calculation.Result.ToString().Replace(",", ".");
            </li>
        }
    </ul>
    <div class="text-center">
        @Html.PagedListPager((IPagedList<Calculation>) ViewData["Calculations"], page => Url.Action("Index", 
                new { page, result = ViewData["result"] }),
                new PagedListRenderOptions {
                    LiElementClasses = new string[] { "page-item" },
                    PageClasses = new string[] { "page-link" }
                })
    </div>
</div>